POST http://localhost:3000/analyze
Content-Type: application/json

{
  "code": "def calculate_average(numbers):\n    \"\"\"\n    Calculates the average of a list of numbers.\n\n    Args:\n        numbers: A list of numbers.\n\n    Returns:\n        The average of the numbers, or 0 if the list is empty.\n        Returns an error message if the input is not a list.\n    \"\"\"\n\n    if not isinstance(numbers, list):\n        return \"Error: Input must be a list.\"\n\n    if not numbers:  # Check for empty list\n        return 0\n\n    total = sum(numbers)\n    average = total / len(numbers)\n    return average\n\n\ndef process_data(data):\n    \"\"\"\n    Processes a list of data, performing calculations and returning results.\n    Handles potential errors.\n\n    Args:\n        data: A list of mixed data types (numbers and strings).\n\n    Returns:\n        A dictionary containing the sum of numbers, the count of strings,\n        and the average of the numbers.  Returns an error message if \n        the input is not a list.\n    \"\"\"\n\n    if not isinstance(data, list):\n        return \"Error: Input must be a list.\"\n\n    numbers = []\n    strings = []\n\n    for item in data:\n        if isinstance(item, (int, float)):\n            numbers.append(item)\n        elif isinstance(item, str):\n            strings.append(item)\n        else:\n            return \"Error: List contains unsupported data types.\" #More specific error\n\n    sum_of_numbers = sum(numbers) if numbers else 0 #Ternary operator for empty list\n    count_of_strings = len(strings)\n\n    average_of_numbers = calculate_average(numbers)\n\n    return {\n        \"sum_of_numbers\": sum_of_numbers,\n        \"count_of_strings\": count_of_strings,\n        \"average_of_numbers\": average_of_numbers,\n    }\n\n\n\n# Example Usage (for testing)\ntest_data1 = [1, 2, 3, 4, 5]\nresult1 = process_data(test_data1)\nprint(f\"Test Data 1: {test_data1}\")\nprint(f\"Result 1: {result1}\")\n\ntest_data2 = [1, \"hello\", 3.14, \"world\", 5]\nresult2 = process_data(test_data2)\nprint(f\"Test Data 2: {test_data2}\")\nprint(f\"Result 2: {result2}\")\n\ntest_data3 = []  # Empty list\nresult3 = process_data(test_data3)\nprint(f\"Test Data 3: {test_data3}\")\nprint(f\"Result 3: {result3}\")\n\ntest_data4 = \"not a list\" #Incorrect input\nresult4 = process_data(test_data4)\nprint(f\"Test Data 4: {test_data4}\")\nprint(f\"Result 4: {result4}\")\n\ntest_data5 = [1,2,3,[4,5]] #Unsupported datatype\nresult5 = process_data(test_data5)\nprint(f\"Test Data 5: {test_data5}\")\nprint(f\"Result 5: {result5}\")",
  "lang": "python"
}